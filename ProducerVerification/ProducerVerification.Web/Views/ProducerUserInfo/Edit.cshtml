@model ProducerVerification.Web.Models.ProducerUserInfo
@using ProducerVerification.Web.Helpers

@{
    ViewBag.Title = "Edit Producer User Information";
}

<div class="row">
    @*<div class="spacer-15px"></div>*@
    <img src="https://stylehub.ncjua-nciua.org/Content/Images/logo_NoAtoms_ProducerVerification.png" />
    <div class="greyLine"></div>
    <div class="spacer-40px"></div>
</div>

@if (TempData["error"] != null)
{
    <div class="alert alert-success">
        <code>@TempData["error"]</code>
    </div>
}

@using (Html.BeginForm("Edit", "ProducerUserInfo", FormMethod.Post, new { @class = "sky-form" }))
{
    var phoneTypeListItems = new string[]
    {
            "Business",
            "Home",
            "Mobile",
            "Other"
    };

    Func<string[], string, List<SelectListItem>> getSelectList = delegate (string[] values, string selected)
    {
        if (selected == null)
        {
            var items = values.Select(t => new SelectListItem()
            {
                Text = t,
                Value = t,
                Selected = false
            });
            return new List<SelectListItem>(items);
        }
        else
        {
            var items = values.Select(t => new SelectListItem()
            {
                Text = t,
                Value = t,
                Selected = string.Equals(t.ToLower(), selected.ToLower())
            });
            return new List<SelectListItem>(items);
        }
    };

    Func<string, List<SelectListItem>> getPhoneSelectList = selected => getSelectList(phoneTypeListItems, selected);
    Func<string, List<SelectListItem>> getStateSelectList = selected => getSelectList(States.StateCodes, selected);

    @Html.AntiForgeryToken()
    <fieldset>
        <div class="row">
            <div class="col-md-6">
                <div class="form-horizontal">
                    <h4>Producer User Information</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.RecID)
                    @Html.HiddenFor(model => model.EmailVerified)

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.ProducerCode, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.ProducerCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProducerCode, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.UserCode, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.UserCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserCode, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.BusinessName, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.BusinessName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BusinessName, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.DropDownListFor(model => model.State, getStateSelectList(Model.State), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.PrimaryPhoneType, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.DropDownListFor(model => model.PrimaryPhoneType, getPhoneSelectList(Model.PrimaryPhoneType), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PrimaryPhoneType, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.PrimaryPhoneNumber, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.PrimaryPhoneNumber, new { htmlAttributes = new { @class = "form-control  phone-number-input", @placeholder = "(XXX) XXX-XXXX" } })
                                @Html.ValidationMessageFor(model => model.PrimaryPhoneNumber, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.SecondaryPhoneType, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.DropDownListFor(model => model.SecondaryPhoneType, getPhoneSelectList(Model.SecondaryPhoneType), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SecondaryPhoneType, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.SecondaryPhoneNumber, htmlAttributes: new { @class = "categoryLabel label"})
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.SecondaryPhoneNumber, new { htmlAttributes = new { @class = "form-control  phone-number-input", @placeholder = "(XXX) XXX-XXXX" } })
                                @Html.ValidationMessageFor(model => model.SecondaryPhoneNumber, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="labelFNOL">
                            @Html.LabelFor(model => model.FaxNumber, htmlAttributes: new { @class = "categoryLabel label" })
                        </div>
                        <div class="inputFNOL">
                            <label class="input">
                                @Html.EditorFor(model => model.FaxNumber, new { htmlAttributes = new { @class = "form-control  phone-number-input", @placeholder = "(XXX) XXX-XXXX" } })
                                @Html.ValidationMessageFor(model => model.FaxNumber, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-10">
                            <input type="submit" class="btn btn-blue2C7" value="Next" />
                        </div>
                    </div>
                </div>

                <div class="col-md-6"></div>
            </div>
        </div>
    </fieldset>
}
<div class="spacer-20px"></div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

